{
  "uuid": "99a84579df4a4303b0f90fc1a1f41f78",
  "historyId": "Get by id",
  "fullName": "Get by id",
  "labels": [
    {
      "name": "thread",
      "value": "NonParallelWorker"
    },
    {
      "name": "host",
      "value": "fv-az459-667"
    },
    {
      "name": "feature",
      "value": "Get posts"
    },
    {
      "name": "tag",
      "value": "positive"
    },
    {
      "name": "tag",
      "value": "smoke"
    },
    {
      "name": "tag",
      "value": "regression"
    },
    {
      "name": "tag",
      "value": "integration"
    },
    {
      "name": "tag",
      "value": "JIRA-7777"
    }
  ],
  "links": [],
  "name": "Get by id",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "  Expected: OK\n  But was:  0\n",
    "trace": "NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at TestProject3.GetPostsStepDefinitions.ThenIExpectedAValidCodeResponse() in /home/runner/work/specflow-report/specflow-report/TestProject3/GetPostsStepDefinitions.cs:line 32\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "Given  I have an id with value 1",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685766988567,
      "stop": 1685766988739
    },
    {
      "name": "When  I send a get request",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685766988740,
      "stop": 1685766988871
    },
    {
      "name": "Then  I expected a valid code response",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685766988871,
      "stop": 1685766988916
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1685766988559,
  "stop": 1685766988920
}